from __future__ import annotations
import carb as carb
from omni.kit.usd.layers._impl.extension import get_layers
from pxr import Sdf
__all__: list = ['link_specs', 'unlink_specs', 'unlink_specs_to_layers', 'unlink_specs_from_all_layers', 'unlink_all_specs', 'get_spec_layer_links', 'get_spec_links_for_layers', 'get_all_spec_links', 'is_spec_linked', 'lock_specs', 'unlock_specs', 'unlock_all_specs', 'get_all_locked_specs', 'is_spec_locked']
def __to_str_list(pathOrPaths: typing.Union[str, pxr.Sdf.Path, typing.List[typing.Union[str, pxr.Sdf.Path]]]):
    ...
def get_all_locked_specs(usd_context) -> typing.List[str]:
    ...
def get_all_spec_links(usd_context) -> typing.Dict[str, typing.List[str]]:
    ...
def get_spec_layer_links(usd_context, spec_paths: typing.Union[str, pxr.Sdf.Path, typing.List[typing.Union[str, pxr.Sdf.Path]]], hierarchy = False) -> typing.Dict[str, typing.List[str]]:
    ...
def get_spec_links_for_layers(usd_context, layer_identifiers: typing.Union[str, typing.List[str]]) -> typing.Dict[str, typing.List[str]]:
    ...
def is_spec_linked(usd_context, spec_path: typing.Union[str, pxr.Sdf.Path], layer_identifier: str = '') -> bool:
    ...
def is_spec_locked(usd_context, spec_path: typing.Union[str, pxr.Sdf.Path]) -> bool:
    ...
def link_specs(usd_context, spec_paths: typing.Union[str, pxr.Sdf.Path, typing.List[typing.Union[str, pxr.Sdf.Path]]], layer_identifiers: typing.Union[str, typing.List[str]], hierarchy = False) -> typing.Dict[str, typing.List[str]]:
    ...
def lock_specs(usd_context, spec_paths: typing.Union[str, pxr.Sdf.Path, typing.List[typing.Union[str, pxr.Sdf.Path]]], hierarchy = False) -> typing.List[str]:
    ...
def unlink_all_specs(usd_context):
    ...
def unlink_specs(usd_context, spec_paths: typing.Union[str, pxr.Sdf.Path, typing.List[typing.Union[str, pxr.Sdf.Path]]], layer_identifiers: typing.Union[str, typing.List[str]], hierarchy = False) -> typing.Dict[str, typing.List[str]]:
    ...
def unlink_specs_from_all_layers(usd_context, spec_paths: typing.Union[str, typing.List[str]], hierarchy = False) -> typing.Dict[str, typing.List[str]]:
    ...
def unlink_specs_to_layers(usd_context, layer_identifiers: typing.Union[str, typing.List[str]]) -> typing.Dict[str, typing.List[str]]:
    ...
def unlock_all_specs(usd_context):
    ...
def unlock_specs(usd_context, spec_paths: typing.Union[str, typing.List[str]], hierarchy = False) -> typing.List[str]:
    ...
