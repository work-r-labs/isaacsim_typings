from __future__ import annotations
import carb as carb
import omni as omni
from omni.kit.property.usd.usd_model_base import UsdBase
from omni.kit.property.usd.usd_model_items import OptionItem
from omni import ui
from pxr import Sdf
import pxr.Usd
from pxr import Usd
__all__: list = ['MetadataObjectModel']
class MetadataObjectModel(omni.ui._ui.AbstractItemModel, omni.kit.property.usd.usd_model_base.UsdBase):
    """
    The value model that is reimplemented in Python to watch a USD paths.
        Paths can be either Attribute or Prim paths
    """
    def __init__(self, stage: pxr.Usd.Stage, object_paths: typing.List[pxr.Sdf.Path], self_refresh: bool, metadata: dict, key: str, default, options: list):
        ...
    def _current_index_changed(self, model):
        ...
    def _get_default_value(self, prop, metadata = None):
        ...
    def _on_dirty(self):
        ...
    def _read_value(self, obj: pxr.Usd.Object, time_code: pxr.Usd.TimeCode):
        ...
    def _update_option(self):
        ...
    def _update_value(self, force = False):
        ...
    def _write_value(self, objects: list, key: str, value):
        ...
    def begin_edit(self):
        ...
    def clean(self):
        ...
    def end_edit(self):
        ...
    def get_item_children(self, item):
        ...
    def get_item_value_model(self, item, column_id):
        ...
    def is_different_from_default(self) -> bool:
        ...
    def set_default(self, comp = -1):
        ...
    def set_value(self, value, comp = -1):
        ...
