from __future__ import annotations
import carb as carb
import contextlib as contextlib
import math as math
from omni.kit.viewport.window.dragdrop.handler import DragDropHandler
import traceback as traceback
__all__: list = ['ViewportEventDelegate']
class ViewportEventDelegate:
    def __init__(self, scene_view, viewport_api):
        ...
    def adjust_flight_speed(self, x: float, y: float):
        ...
    def destroy(self):
        ...
    def drop(self, data):
        ...
    def drop_accept(self, url: str):
        ...
    def key_pressed(self, key_index: int, modifiers: int, is_down: bool):
        ...
    def mouse_hovered(self, value: bool, *args):
        ...
    def mouse_moved(self, x: float, y: float, modifiers: int, is_pressed: bool, *args):
        ...
    def mouse_wheel(self, x: float, y: float, modifiers: int):
        ...
    def stop_drag_drop(self, cancel: bool = True):
        ...
    @property
    def drag_drop_handler(self):
        ...
    @property
    def scene_view(self):
        ...
    @property
    def viewport_api(self):
        ...
def _limit_camera_velocity(value: float, settings: carb.settings._settings.ISettings, context_name: str):
    ...
